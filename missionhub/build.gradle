apply plugin: 'android'
apply plugin: 'newrelic'

dependencies {
    compile 'com.android.support:support-v4:19.1.0'
    compile 'com.nineoldandroids:library:2.4.0@jar'
    compile 'org.holoeverywhere:library:2.1.1-SNAPSHOT@aar'
    compile 'org.holoeverywhere:addon-preferences:2.1.1-SNAPSHOT@aar'
    compile "com.viewpagerindicator:viewpagerindicator:2.4.1@aar"
    compile "com.facebook.android:facebook:3.6@aar"
    compile 'com.google.android.analytics:analytics:3'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.google.guava:guava:16.+'
    compile 'greenrobot:greendao:1.3.0-MH'
    compile 'de.greenrobot:eventbus:2.2.0'
    compile 'ch.acra:acra-mh:5.0.0-SNAPSHOT'
    compile 'com.github.kevinsawicki:http-request:5.+'
    compile 'org.apache.commons:commons-lang3:3.+'
    compile 'com.googlecode.libphonenumber:libphonenumber:6.+'
    compile ('com.github.chrisbanes.actionbarpulltorefresh:extra-abc:0.9+') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    compile 'joda-time:joda-time:2.3'
    compile 'com.android:volley:1.0.3'
    compile 'com.google.code.findbugs:jsr305:2.0.3'
    compile 'javax.inject:javax.inject:1'
    compile 'com.newrelic.agent.android:android-agent:3.+'

    androidTestCompile 'junit:junit:3.8'
}

android {
    compileSdkVersion 19
    buildToolsVersion '21.1.1'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        androidTest.setRoot('tests')
        androidTest {
            java.srcDirs = ['tests/src']
            res.srcDirs = ['tests/res']
            assets.srcDirs = ['tests/assets']
        }
    }

    signingConfigs { release }

    productFlavors {
        google {}
        amazon {}
        bn {}
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard.txt'
            signingConfig signingConfigs.release
        }
        debug {}
    }
}

// Dynamic Signing
if (project.hasProperty("signingStoreFile") && project.hasProperty("signingStorePassword") && project.hasProperty("signingKeyAlias") && project.hasProperty("signingKeyPassword")) {
    android.signingConfigs.release.storeFile = file(project.signingStoreFile)
    android.signingConfigs.release.storePassword = project.signingStorePassword
    android.signingConfigs.release.keyAlias = project.signingKeyAlias
    android.signingConfigs.release.keyPassword = project.signingKeyPassword
} else {
    logger.warn("WARNING: Invalid release signingConfig properties, signing with debug key.")
    android.buildTypes.release.signingConfig = android.buildTypes.debug.signingConfig
}

// Dynamic Versioning
android.defaultConfig.versionCode = versionCode
android.defaultConfig.versionName = versionName