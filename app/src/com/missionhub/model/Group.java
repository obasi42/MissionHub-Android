package com.missionhub.model;

import com.missionhub.model.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table Groups.
 */
public class Group {

    private Long id;
    private String name;
    private String location;
    private String meets;
    private String meeting_day;
    private Integer start_time;
    private Integer end_time;
    private Long organization_id;
    private Boolean list_publicly;
    private Boolean approve_join_requests;
    private java.util.Date updated_at;
    private java.util.Date created_at;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient GroupDao myDao;

    private Organization organization;
    private Long organization__resolvedKey;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Group() {
    }

    public Group(Long id) {
        this.id = id;
    }

    public Group(Long id, String name, String location, String meets, String meeting_day, Integer start_time, Integer end_time, Long organization_id, Boolean list_publicly, Boolean approve_join_requests, java.util.Date updated_at, java.util.Date created_at) {
        this.id = id;
        this.name = name;
        this.location = location;
        this.meets = meets;
        this.meeting_day = meeting_day;
        this.start_time = start_time;
        this.end_time = end_time;
        this.organization_id = organization_id;
        this.list_publicly = list_publicly;
        this.approve_join_requests = approve_join_requests;
        this.updated_at = updated_at;
        this.created_at = created_at;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getGroupDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    public String getMeets() {
        return meets;
    }

    public void setMeets(String meets) {
        this.meets = meets;
    }

    public String getMeeting_day() {
        return meeting_day;
    }

    public void setMeeting_day(String meeting_day) {
        this.meeting_day = meeting_day;
    }

    public Integer getStart_time() {
        return start_time;
    }

    public void setStart_time(Integer start_time) {
        this.start_time = start_time;
    }

    public Integer getEnd_time() {
        return end_time;
    }

    public void setEnd_time(Integer end_time) {
        this.end_time = end_time;
    }

    public Long getOrganization_id() {
        return organization_id;
    }

    public void setOrganization_id(Long organization_id) {
        this.organization_id = organization_id;
    }

    public Boolean getList_publicly() {
        return list_publicly;
    }

    public void setList_publicly(Boolean list_publicly) {
        this.list_publicly = list_publicly;
    }

    public Boolean getApprove_join_requests() {
        return approve_join_requests;
    }

    public void setApprove_join_requests(Boolean approve_join_requests) {
        this.approve_join_requests = approve_join_requests;
    }

    public java.util.Date getUpdated_at() {
        return updated_at;
    }

    public void setUpdated_at(java.util.Date updated_at) {
        this.updated_at = updated_at;
    }

    public java.util.Date getCreated_at() {
        return created_at;
    }

    public void setCreated_at(java.util.Date created_at) {
        this.created_at = created_at;
    }

    /** To-one relationship, resolved on first access. */
    public Organization getOrganization() {
        Long __key = this.organization_id;
        if (organization__resolvedKey == null || !organization__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            OrganizationDao targetDao = daoSession.getOrganizationDao();
            Organization organizationNew = targetDao.load(__key);
            synchronized (this) {
                organization = organizationNew;
            	organization__resolvedKey = __key;
            }
        }
        return organization;
    }

    public void setOrganization(Organization organization) {
        synchronized (this) {
            this.organization = organization;
            organization_id = organization == null ? null : organization.getId();
            organization__resolvedKey = organization_id;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
