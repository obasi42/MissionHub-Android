package com.missionhub.model;

import com.missionhub.model.DaoSession;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

/**
 * Entity mapped to table QUESTION.
 */
public class Question {

    private Long id;
    private String kind;
    private String style;
    private String label;
    private String content;
    private String object_name;
    private String attribute_name;
    private Boolean web_only;
    private String trigger_words;
    private String notify_via;
    private Boolean hidden;
    private String updated_at;
    private String created_at;

    /**
     * Used to resolve relations
     */
    private transient DaoSession daoSession;

    /**
     * Used for active entity operations.
     */
    private transient QuestionDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Question() {
    }

    public Question(Long id) {
        this.id = id;
    }

    public Question(Long id, String kind, String style, String label, String content, String object_name, String attribute_name, Boolean web_only, String trigger_words, String notify_via, Boolean hidden, String updated_at, String created_at) {
        this.id = id;
        this.kind = kind;
        this.style = style;
        this.label = label;
        this.content = content;
        this.object_name = object_name;
        this.attribute_name = attribute_name;
        this.web_only = web_only;
        this.trigger_words = trigger_words;
        this.notify_via = notify_via;
        this.hidden = hidden;
        this.updated_at = updated_at;
        this.created_at = created_at;
    }

    /**
     * called by internal mechanisms, do not call yourself.
     */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getQuestionDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getKind() {
        return kind;
    }

    public void setKind(String kind) {
        this.kind = kind;
    }

    public String getStyle() {
        return style;
    }

    public void setStyle(String style) {
        this.style = style;
    }

    public String getLabel() {
        return label;
    }

    public void setLabel(String label) {
        this.label = label;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public String getObject_name() {
        return object_name;
    }

    public void setObject_name(String object_name) {
        this.object_name = object_name;
    }

    public String getAttribute_name() {
        return attribute_name;
    }

    public void setAttribute_name(String attribute_name) {
        this.attribute_name = attribute_name;
    }

    public Boolean getWeb_only() {
        return web_only;
    }

    public void setWeb_only(Boolean web_only) {
        this.web_only = web_only;
    }

    public String getTrigger_words() {
        return trigger_words;
    }

    public void setTrigger_words(String trigger_words) {
        this.trigger_words = trigger_words;
    }

    public String getNotify_via() {
        return notify_via;
    }

    public void setNotify_via(String notify_via) {
        this.notify_via = notify_via;
    }

    public Boolean getHidden() {
        return hidden;
    }

    public void setHidden(Boolean hidden) {
        this.hidden = hidden;
    }

    public String getUpdated_at() {
        return updated_at;
    }

    public void setUpdated_at(String updated_at) {
        this.updated_at = updated_at;
    }

    public String getCreated_at() {
        return created_at;
    }

    public void setCreated_at(String created_at) {
        this.created_at = created_at;
    }

    /**
     * Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context.
     */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.delete(this);
    }

    /**
     * Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context.
     */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.update(this);
    }

    /**
     * Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context.
     */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
